<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WebSocket 连接示例</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
        }
        #output {
            margin-top: 20px;
            font-family: monospace;
            white-space: pre-wrap;
            border: 1px solid #ccc;
            padding: 10px;
            height: 300px;
            overflow-y: auto;
        }
    </style>
</head>
<body>

    <h1>WebSocket 连接</h1>
    <p>连接到服务器：<span id="status">未连接</span></p>

    <div id="output"></div>

    <script>
        // 创建 WebSocket 对象
        const wsUrl = "ws://129.68.11.2:8000/ws";
        const socket = new WebSocket(wsUrl);

        // 打开连接时的处理函数
        socket.onopen = () => {
            document.getElementById('status').textContent = "已连接";
            logMessage("连接已建立到: " + wsUrl);
        };

        // 接收到消息时的处理函数
        socket.onmessage = (event) => {
            logMessage("收到消息: " + event.data);
        };

        // 连接关闭时的处理函数
        socket.onclose = () => {
            document.getElementById('status').textContent = "连接已关闭";
            logMessage("连接已关闭");
            logMessage("关闭代码: " + event.code + ", 原因: " + event.reason);
        };

        // 连接错误时的处理函数
        socket.onerror = (error) => {
            logMessage("连接错误: " + error.message);
        };

        // 日志显示函数
        function logMessage(message) {
            const output = document.getElementById('output');
            output.textContent += message + '\n';
            output.scrollTop = output.scrollHeight;  // 自动滚动到最新消息
        }

        // 捕获浏览器控制台中的错误信息
        window.onerror = function(message, source, lineno, colno, error) {
            logMessage("捕获到错误: " + message);
        };
    </script>

</body>
</html>
